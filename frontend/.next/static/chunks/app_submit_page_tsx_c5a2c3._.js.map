{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/dansimons/Documents/content-reviewer/content-reviewer/frontend/app/submit/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\ninterface Brief {\n    id: number;\n    title: string;\n    link: string;\n}\n\nexport default function SubmitContentPage() {\n    const [briefs, setBriefs] = useState<Brief[]>([]);\n    const [selectedBrief, setSelectedBrief] = useState<string | null>(null);\n    const [file, setFile] = useState<File | null>(null);\n    const [feedback, setFeedback] = useState<string | null>(null);\n    const [loading, setLoading] = useState(false);\n\n    useEffect(() => {\n        axios.get(\"http://localhost:5001/api/briefs\")\n            .then(response => setBriefs(response.data))\n            .catch(error => console.error(\"Error fetching briefs:\", error));\n    }, []);\n\n    const handleFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        if (e.target.files && e.target.files.length > 0) {\n            setFile(e.target.files[0]);\n        }\n    };\n\n    const handleSubmit = async () => {\n        if (!file || !selectedBrief) {\n            alert(\"Please select a brief and upload a file.\");\n            return;\n        }\n\n        const formData = new FormData();\n        formData.append(\"file\", file);\n        formData.append(\"briefUrl\", selectedBrief);\n\n        setLoading(true);\n        try {\n            const response = await axios.post(\"http://localhost:5001/api/submissions/upload\", formData, {\n                headers: { \"Content-Type\": \"multipart/form-data\" },\n            });\n\n            setFeedback(response.data.feedback);\n        } catch (error) {\n            console.error(\"Error submitting:\", error);\n            setFeedback(\"Failed to retrieve feedback.\");\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    return (\n        <div className=\"max-w-4xl mx-auto p-6 bg-gray-900 text-white rounded-lg\">\n            <h1 className=\"text-2xl font-bold text-center mb-6\">Submit Your Content</h1>\n\n            {/* File Upload */}\n            <div className=\"mb-4\">\n                <label className=\"block mb-2\">Upload your script:</label>\n                <input type=\"file\" accept=\".txt,.pdf,.doc,.docx\" onChange={handleFileChange} className=\"w-full p-2 bg-gray-700 text-white rounded\" />\n            </div>\n\n            {/* Brief Selection */}\n            <div className=\"mb-4\">\n                <label className=\"block mb-2\">Select a Brief:</label>\n                <select value={selectedBrief || \"\"} onChange={(e) => setSelectedBrief(e.target.value)} className=\"w-full p-2 bg-gray-700 text-white rounded\">\n                    <option value=\"\">-- Select a Brief --</option>\n                    {briefs.map((brief) => (\n                        <option key={brief.id} value={brief.link}>{brief.title}</option>\n                    ))}\n                </select>\n            </div>\n\n            {/* Submit Button */}\n            <button onClick={handleSubmit} className=\"w-full p-3 bg-blue-500 hover:bg-blue-600 text-white rounded\">\n                {loading ? \"Processing...\" : \"Get Feedback\"}\n            </button>\n\n            {/* Feedback Display */}\n            {feedback && (\n                <div className=\"mt-6 p-4 bg-gray-800 rounded-lg\">\n                    <h2 className=\"text-xl font-semibold mb-2\">AI Feedback:</h2>\n                    <p className=\"text-gray-300\">{feedback}</p>\n                </div>\n            )}\n        </div>\n    );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;;;AAHA;;;AAWe,SAAS;;IACpB,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAW,EAAE;IAChD,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAiB;IAClE,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAe;IAC9C,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAiB;IACxD,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAEvC,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;uCAAE;YACN,wIAAA,CAAA,UAAK,CAAC,GAAG,CAAC,oCACL,IAAI;+CAAC,CAAA,WAAY,UAAU,SAAS,IAAI;8CACxC,KAAK;+CAAC,CAAA,QAAS,QAAQ,KAAK,CAAC,0BAA0B;;QAChE;sCAAG,EAAE;IAEL,MAAM,mBAAmB,CAAC;QACtB,IAAI,EAAE,MAAM,CAAC,KAAK,IAAI,EAAE,MAAM,CAAC,KAAK,CAAC,MAAM,GAAG,GAAG;YAC7C,QAAQ,EAAE,MAAM,CAAC,KAAK,CAAC,EAAE;QAC7B;IACJ;IAEA,MAAM,eAAe;QACjB,IAAI,CAAC,QAAQ,CAAC,eAAe;YACzB,MAAM;YACN;QACJ;QAEA,MAAM,WAAW,IAAI;QACrB,SAAS,MAAM,CAAC,QAAQ;QACxB,SAAS,MAAM,CAAC,YAAY;QAE5B,WAAW;QACX,IAAI;YACA,MAAM,WAAW,MAAM,wIAAA,CAAA,UAAK,CAAC,IAAI,CAAC,gDAAgD,UAAU;gBACxF,SAAS;oBAAE,gBAAgB;gBAAsB;YACrD;YAEA,YAAY,SAAS,IAAI,CAAC,QAAQ;QACtC,EAAE,OAAO,OAAO;YACZ,QAAQ,KAAK,CAAC,qBAAqB;YACnC,YAAY;QAChB,SAAU;YACN,WAAW;QACf;IACJ;IAEA,qBACI,6LAAC;QAAI,WAAU;;0BACX,6LAAC;gBAAG,WAAU;0BAAsC;;;;;;0BAGpD,6LAAC;gBAAI,WAAU;;kCACX,6LAAC;wBAAM,WAAU;kCAAa;;;;;;kCAC9B,6LAAC;wBAAM,MAAK;wBAAO,QAAO;wBAAuB,UAAU;wBAAkB,WAAU;;;;;;;;;;;;0BAI3F,6LAAC;gBAAI,WAAU;;kCACX,6LAAC;wBAAM,WAAU;kCAAa;;;;;;kCAC9B,6LAAC;wBAAO,OAAO,iBAAiB;wBAAI,UAAU,CAAC,IAAM,iBAAiB,EAAE,MAAM,CAAC,KAAK;wBAAG,WAAU;;0CAC7F,6LAAC;gCAAO,OAAM;0CAAG;;;;;;4BAChB,OAAO,GAAG,CAAC,CAAC,sBACT,6LAAC;oCAAsB,OAAO,MAAM,IAAI;8CAAG,MAAM,KAAK;mCAAzC,MAAM,EAAE;;;;;;;;;;;;;;;;;0BAMjC,6LAAC;gBAAO,SAAS;gBAAc,WAAU;0BACpC,UAAU,kBAAkB;;;;;;YAIhC,0BACG,6LAAC;gBAAI,WAAU;;kCACX,6LAAC;wBAAG,WAAU;kCAA6B;;;;;;kCAC3C,6LAAC;wBAAE,WAAU;kCAAiB;;;;;;;;;;;;;;;;;;AAKlD;GA/EwB;KAAA"}},
    {"offset": {"line": 192, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}